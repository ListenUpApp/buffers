syntax = "proto3";

package listenup.auth.v1;

import "listenup/user/v1/user.proto";

service AuthService {
  // Registers a user and creates a [User] object behind the scenes
  rpc Register(RegisterRequest) returns (RegisterResponse) {}
  // Logs the user in
  rpc Login(LoginRequest) returns (LoginResponse) {}
  // Refreshes a users access token
  rpc RefreshToken(RefreshTokenRequest) returns (RefreshTokenResponse) {}
}

// This is the type that gets stored in our database ultimately, but is only used for Auth purposes
message AuthUser {
  // Holds a reference to the User, this is really the only data we use outside of auth purposes
  listenup.user.v1.User user = 1;
  // The users password, for authentication/authorization
  string hashed_password = 2;
}

message RegisterRequest {
  // The users email (we don't do any verification logic with this yet, but may in the future)
  string email = 1;
  // The users name, this will be used as a visual identifier throughout the app
  string name = 2;
  // The users un-hashed password
  string password = 3;
}

// We don't send anything back at this point except success or failure codes.
message RegisterResponse {}

message LoginRequest {
  // The users email
  string email = 1;
  // The users un-hashed password
  string password = 2;
}

message LoginResponse {
  // The access token, used as an authorization mechanism for future requests.
  string access_token = 1;
  // The user themselves.
  listenup.user.v1.User user = 2;
  // Refresh token
  string refresh_token = 3;
}

message RefreshTokenRequest {
  // The users current refresh token
  string refresh_token = 1;
}

message RefreshTokenResponse {
  // Updated app access token
  string access_token = 1;
}
